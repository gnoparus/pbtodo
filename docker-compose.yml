# 🐳 Docker Compose for pbtodo Development Environment
# Includes frontend, backend, and supporting services with security configurations

version: '3.8'

services:
  # Frontend Application (React + Vite)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
      target: builder
    container_name: pbtodo-frontend-dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
    environment:
      - NODE_ENV=development
      - VITE_POCKETBASE_URL=http://pocketbase:8090
      - VITE_HTTPS_ENABLED=false
      - VITE_DEV_MODE=true
      - VITE_ENABLE_SECURITY_HEADERS=true
      - VITE_ENABLE_CSP=true
      - VITE_ENABLE_HSTS=false
      - VITE_MIN_PASSWORD_LENGTH=8
      - VITE_REQUIRE_PASSWORD_COMPLEXITY=true
    depends_on:
      - pocketbase
    networks:
      - pbtodo-network
    command: npm run dev -- --host 0.0.0.0
    restart: unless-stopped

  # PocketBase Backend
  pocketbase:
    image: ghcr.io/muchobien/pocketbase:latest
    container_name: pbtodo-pocketbase-dev
    ports:
      - "8090:8090"
    volumes:
      - ./pocketbase/pb_data:/pb_data
      - ./pocketbase/pb_hooks:/pb_hooks
      - ./pocketbase/pb_migrations:/pb_migrations
      - ./infrastructure/scripts:/scripts:ro
    environment:
      - POCKETBASE_ENCRYPTION_KEY=${POCKETBASE_ENCRYPTION_KEY:-dev-key-change-in-production}
      - POCKETBASE_ADMIN_EMAIL=${POCKETBASE_ADMIN_EMAIL:-admin@example.com}
      - POCKETBASE_ADMIN_PASSWORD=${POCKETBASE_ADMIN_PASSWORD:-admin123456}
    networks:
      - pbtodo-network
    restart: unless-stopped
    command: >
      sh -c "
        # Wait for scripts to be available
        sleep 2

        # Run security hardening script if available
        if [ -f /scripts/secure-pocketbase.sh ]; then
          echo '🔐 Running PocketBase security hardening...'
          /scripts/secure-pocketbase.sh development || true
        fi

        # Start PocketBase with development settings
        /pb/pocketbase serve --http=0.0.0.0:8090 --encryptionEnv=POCKETBASE_ENCRYPTION_KEY
      "

  # Nginx Reverse Proxy (Development)
  nginx:
    image: nginx:alpine
    container_name: pbtodo-nginx-dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/ssl:/etc/nginx/ssl:ro
      - ./docker/frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - pocketbase
    networks:
      - pbtodo-network
    restart: unless-stopped
    command: >
      sh -c "
        # Generate self-signed SSL certificate for development
        if [ ! -f /etc/nginx/ssl/pbtodo.crt ]; then
          echo '🔐 Generating self-signed SSL certificate...'
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
            -keyout /etc/nginx/ssl/pbtodo.key \
            -out /etc/nginx/ssl/pbtodo.crt \
            -subj '/C=US/ST=State/L=City/O=Development/CN=localhost'
        fi

        # Start Nginx
        nginx -g 'daemon off;'
      "

  # Database Backup Service (Development)
  backup:
    image: alpine:latest
    container_name: pbtodo-backup-dev
    volumes:
      - ./pocketbase/pb_data:/data:ro
      - ./backups:/backups
      - ./infrastructure/scripts:/scripts:ro
    environment:
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
      - BACKUP_RETENTION_DAYS=7
    networks:
      - pbtodo-network
    restart: unless-stopped
    command: >
      sh -c "
        # Install required packages
        apk add --no-cache curl

        # Create backup directory
        mkdir -p /backups

        # Run backup script every hour (for development)
        while true; do
          echo '💾 Creating backup...'
          if [ -f /scripts/backup-monitor.sh ]; then
            /scripts/backup-monitor.sh development || true
          fi

          # Simple backup
          timestamp=\$$(date +%Y%m%d-%H%M%S)
          tar -czf /backups/pocketbase-dev-\$timestamp.tar.gz -C /data .

          # Keep only last 7 backups in development
          ls -t /backups/pocketbase-dev-*.tar.gz | tail -n +8 | xargs rm -f || true

          echo '✅ Backup completed: pocketbase-dev-\$timestamp.tar.gz'
          sleep 3600  # Every hour
        done
      "

  # Monitoring Service (Development)
  monitoring:
    image: prom/prometheus:latest
    container_name: pbtodo-monitoring-dev
    ports:
      - "9090:9090"
    volumes:
      - ./docker/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    networks:
      - pbtodo-network
    restart: unless-stopped

  # Grafana Dashboard (Development)
  grafana:
    image: grafana/grafana:latest
    container_name: pbtodo-grafana-dev
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123456
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - pbtodo-network
    restart: unless-stopped

# Networks
networks:
  pbtodo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
